name: e2e
on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'release*'
    paths-ignore:
      - 'readme.md'
      - 'docs/**'
      - '.github/config.yml'
  pull_request:
    branches:
      - 'main'
      - 'master'
      - 'release*'
    paths-ignore:
      - 'readme.md'
      - 'docs/**'
      - '.github/config.yml'

permissions: read-all

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set labels and tags
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/hubwoop/lol9k1
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value={{branch}}-{{sha}}
          flavor: |
            latest=true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push container image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/hubwoop/lol9k1:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        env:
          TRIVY_USERNAME: ${{ github.repository_owner }}
          TRIVY_PASSWORD: ${{ secrets.CR_PAT }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}